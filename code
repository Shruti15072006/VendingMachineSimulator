#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define PRODUCT_LIMIT 11
#define SELECTION_LIMIT 4

struct Product {
    int productIndex;
    char Pname[40];
    float price;
    int stock;
};

void QR(float total_amount) {
    printf("\n[QR Code is Generated for Rs. %.2f Payment]\n", total_amount);
    printf("Scan the QR code\n");
}

int main() {
    struct Product products[PRODUCT_LIMIT] = {
        {1, "Rite Bite Max protein Desi Masala Chips", 20, 5},
        {2, "Rite Bite Max protein peri peri Chips", 20, 5},
        {3, "Lays's masala magic flavour", 20, 5},
        {4, "Lays's classic salty flavour", 20, 5},
        {5, "Lays's chile limon flavour", 20, 5},
        {6, "protein bar choco delite", 45, 5},
        {7, "protein bar peanut butter", 45, 5},
        {8, "protein bar nuts&seeds", 45, 5},
        {9, "coffee mocha frappuccino", 50, 5},
        {10, "cold coffee", 50, 5},
        {11, "water", 10, 20}
    };

    int selectedProductIndexes[SELECTION_LIMIT];
    int quantities[SELECTION_LIMIT];
    int numItems = 0;

    while (1) {
        printf("\n---------- Vending Machine --------\n");
        printf("1. View Available Products\n");
        printf("2. Select products\n");
        printf("3. EXIT\n");

        printf("Enter choice: ");
        int choice;
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("\nAvailable Products:\n");
                printf("Index | Product Name                       | Price | Stock\n");
                for (int i = 0; i < PRODUCT_LIMIT; i++) {
                    printf("| %-4d | %-30s | %.2f  | %-3d |\n", products[i].productIndex, products[i].Pname, products[i].price, products[i].stock);
                }
                break;
            case 2:
                numItems = 0;
                printf("\nSelect products ( enter product Index or 0 to finish):\n");
                while (numItems < SELECTION_LIMIT) {
                    int productIndex;
                    printf("Enter product Index (0 to finish): ");
                    scanf("%d", &productIndex);

                    if (productIndex == 0) {
                        break;
                    }

                    if (productIndex < 1 || productIndex > PRODUCT_LIMIT) {
                        printf("Invalid product ID. Please try again.\n");
                        continue;
                    }

                    int quantity;
                    printf("Enter quantity for %s (max %d): ", products[productIndex - 1].Pname, products[productIndex - 1].stock);
                    scanf("%d", &quantity);

                    if (quantity < 1 || quantity > products[productIndex - 1].stock) {
                        printf("Invalid quantity. Please try again.\n");
                        continue;
                    }

                    selectedProductIndexes[numItems] = productIndex - 1;
                    quantities[numItems] = quantity;
                    numItems++;

                    if (numItems == SELECTION_LIMIT) {
                        printf("You have selected the maximum number of products.\n");
                        break;
                    }
                }

                float totalPrice = 0.0;
                for (int i = 0; i < numItems; i++) {
                    totalPrice += products[selectedProductIndexes[i]].price * quantities[i];
                }

                printf("\nTotal amount: Rs. %.2f\n", totalPrice);

                QR(totalPrice);

                printf("Scan the QR code and make the payment.\n");
                printf("Enter amount: ");
                float payment;
                scanf("%f", &payment);

                if (payment < totalPrice) {
                    printf("Insufficient amount. Transaction cancelled. Please try again.\n");
                } else {
                    printf("Payment successful. Dispensing items...\n");

                    for (int i = 0; i < numItems; i++) {
                        products[selectedProductIndexes[i]].stock -= quantities[i];
                        printf("Dispensed %d x %s\n", quantities[i], products[selectedProductIndexes[i]].Pname);
                    }
                }
                break;
            case 3:
                printf("Thank you! Come again!\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
